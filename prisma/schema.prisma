generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model calificacion {
  id_calificacion   Int       @id @default(autoincrement())
  id_usuario        Int?
  calificacion      Int?
  comentario        String?
  id_evento         Int?
  id_zona_segura    Int?
  tipo_calificacion String?   @db.VarChar(50)
  usuarios          usuarios? @relation(fields: [id_usuario], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction)
}

model detalle_ruta {
  id_detalle_ruta Int       @id @default(autoincrement())
  id_ruta         Int?
  id_zona_segura  Int?
  id_evento       Int?
  fecha_registro  DateTime? @default(now()) @db.Timestamp(6)
  rutas           rutas?    @relation(fields: [id_ruta], references: [id_ruta], onDelete: NoAction, onUpdate: NoAction)
}

model rutas {
  id_ruta                               Int            @id @default(autoincrement())
  id_usuario                            Int?
  riesgo                                Int?
  tiempo_estimado                       String?        @db.VarChar
  id_origen                             Int?
  id_destino                            Int?
  favorito                              Boolean?       @default(false)
  detalle_ruta                          detalle_ruta[]
  ubicacion_rutas_id_destinoToubicacion ubicacion?     @relation("rutas_id_destinoToubicacion", fields: [id_destino], references: [id_ubicacion], onDelete: NoAction, onUpdate: NoAction)
  ubicacion_rutas_id_origenToubicacion  ubicacion?     @relation("rutas_id_origenToubicacion", fields: [id_origen], references: [id_ubicacion], onDelete: NoAction, onUpdate: NoAction)
  usuarios                              usuarios?      @relation(fields: [id_usuario], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model spatial_ref_sys {
  srid      Int     @id
  auth_name String? @db.VarChar(256)
  auth_srid Int?
  srtext    String? @db.VarChar(2048)
  proj4text String? @db.VarChar(2048)
}

model tipo_evento {
  id_tipo_evento Int       @id @default(autoincrement())
  nombre         String    @db.VarChar(100)
  eventos        eventos[]
}

model ubicacion {
  id_ubicacion                      Int       @id @default(autoincrement())
  id_usuario                        Int?
  latitud                           Decimal   @db.Decimal(9, 6)
  longitud                          Decimal   @db.Decimal(9, 6)
  nombre                            String?   @db.VarChar(100)
  rutas_rutas_id_destinoToubicacion rutas[]   @relation("rutas_id_destinoToubicacion")
  rutas_rutas_id_origenToubicacion  rutas[]   @relation("rutas_id_origenToubicacion")
  usuarios                          usuarios? @relation(fields: [id_usuario], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction)
}

model usuarios {
  id_usuario     Int            @id @default(autoincrement())
  nombre_usuario String         @db.VarChar(100)
  clave          String
  rol            String?        @db.VarChar(20)
  correo         String         @unique @db.VarChar(100)
  fecha_registro DateTime?      @default(now()) @db.Timestamp(6)
  calificacion   calificacion[]
  eventos        eventos[]
  rutas          rutas[]
  ubicacion      ubicacion[]
}

model eventos {
  id_evento      Int                       @id(map: "evento_pkey") @default(autoincrement())
  id_tipo_evento Int?
  descripcion    String?
  id_usuario     Int?
  fecha_registro DateTime?                 @default(now()) @db.Timestamp(6)
  ubicacion      Unsupported("geography")?
  tipo_evento    tipo_evento?              @relation(fields: [id_tipo_evento], references: [id_tipo_evento], onDelete: NoAction, onUpdate: NoAction, map: "evento_id_tipo_evento_fkey")
  usuarios       usuarios?                 @relation(fields: [id_usuario], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction, map: "evento_id_usuario_fkey")
}
